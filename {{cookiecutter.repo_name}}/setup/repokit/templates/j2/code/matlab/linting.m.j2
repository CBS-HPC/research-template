{% raw %}
function linting
% Lint MATLAB code under PROJECT_ROOT/src using checkcode.

try
    scriptPath = mfilename('fullpath');
    srcDir = fileparts(scriptPath);
    projectRoot = fileparts(srcDir);
    fprintf('PROJECT_ROOT: %s\n', projectRoot);
    fprintf('SRC: %s\n\n', srcDir);

    files = dir(fullfile(srcDir, '**', '*.m'));
    if isempty(files)
        fprintf('Info: No .m files under %s\n', srcDir);
        return; % or exit(0);
    end

    issues = struct('file', {}, 'line', {}, 'column', {}, 'id', {}, 'message', {});
    for k = 1:numel(files)
        f = fullfile(files(k).folder, files(k).name);
        r = checkcode(f, '-id', '-cyc');   % struct array of messages (may lack 'file')
        if isempty(r), continue; end

        for j = 1:numel(r)
            s.file = f;  % carry filename explicitly
            if isfield(r, 'line'),    s.line = r(j).line;     else, s.line = 0; end
            if isfield(r, 'column'),  s.column = r(j).column; else, s.column = 0; end
            if isfield(r, 'id')
                s.id = r(j).id;
            elseif isfield(r, 'identifier')
                s.id = r(j).identifier;
            else
                s.id = 'checkcode';
            end
            if isfield(r, 'message'), s.message = r(j).message; else, s.message = ''; end
            issues(end+1) = s; %#ok<AGROW>
        end
    end

    if isempty(issues)
        fprintf('OK: No MATLAB lint issues.\n');
        % exit(0);
    else
        for i = 1:numel(issues)
            fprintf('%s:%d:%d %s %s\n', ...
                issues(i).file, issues(i).line, issues(i).column, issues(i).id, issues(i).message);
        end
        % exit(1);
    end

catch ME
    disp(getReport(ME));
    % exit(2);
end
end

{% endraw %}