[project]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "Insert project description here"
dependencies = []
requires-python = ">=3.9"

[tool.uv]

# ============================================================
# Project template metadata
# Replaces: .cookiecutter
# Used for documentation, reproducibility, and scaffolding
# ============================================================
[tool.cookiecutter]
REQUIREMENT_FILE = "requirements.txt"
PROJECT_NAME = "jfsegsersr"
REPO_NAME = "jfsegsersr"
PROJECT_DESCRIPTION = "Insert project description here"
VERSION = "0.0.1"
AUTHORS = "Your Name"
ORCIDS = "Provide your ORCID"
EMAIL = "Provide your email"
CODE_LICENSE = "MIT"
DOC_LICENSE = "CC-BY-4.0"
DATA_LICENSE = "CC-BY-4.0"
PROGRAMMING_LANGUAGE = "Python"
PYTHON_ENV_MANAGER = "Venv"
VERSION_CONTROL = "None"
REMOTE_BACKUP = "None"
REMOTE_STORAGE = "None"
CODE_REPO = "None"
PYTHON_VERSION = "None"

# ============================================================
# Ignore patterns for remote sync tools like Rclone
# Replaces: .rcloneignore
# ============================================================
[tool.rcloneignore]
patterns = [
  "bin/",
  ".venv/",
  ".conda/"
]

# ============================================================
# Ignore patterns for file tree visualizations
# Replaces: .treeignore
# ============================================================
[tool.treeignore]
patterns = [
  "bin/",
  "utils/",
  ".conda/",
  ".venv/",
  "renv/",
  ".git/",
  ".github/",
  ".datalad/",
  ".gitkeep",
  ".env",
  "__pycache__",
  "setup.egg-info"
]

# ============================================================
# Maps Python packages to OS platforms for conditional installs
# Replaces: platform_rules.json
# ============================================================
[tool.platform_rules]
pywin32 = "win32"
pypiwin32 = "win32"
pywinpty = "win32"
wmi = "win32"
pync = "darwin"
pyobjc = "darwin"
dbus-python = "linux"
pygobject = "linux"
pyudev = "linux"

# ============================================================
# Descriptions for key project files and directories
# Replaces: file_descriptions.json
# Used for UI, automation, and documentation
# ============================================================
[tool.file_descriptions]
"data" = "Directory containing scripts to download or generate data."
"01_interim" = "Intermediate data transformed during the workflow."
"02_processed" = "Final, clean data used for analysis or modeling."
"00_raw" = "Original, immutable raw data."
"src" = "Directory containing source code for use in this project."
"R" = "R-language source code directory."
"stata" = "Stata source code directory."
"docs" = "Documentation files, reports, or rendered outputs."
"notebooks" = "Jupyter or R notebooks for exploration or reporting."
"results" = "Generated results, such as models, logs, or summaries."
"setup" = "Python package for configuring the project environment."
"DCAS template" = "Replication package template (DCAS-compliant)."
"utils" = "Helper scripts used in CLI tooling."
"renv" = "R `renv` directory for environment restoration."
".venv" = "Python virtual environment (excluded from Git)."
".conda" = "Conda virtual environment directory."
".cookiecutter" = "Template configuration metadata."
".gitignore" = "Files/folders excluded from Git tracking."
".rcloneignore" = "Files/folders excluded from remote backup."
".treeignore" = "Files/folders excluded from file tree views."
".gitlog" = "Log file of tracked Git activity."
".env" = "Environment variables (paths, tokens, secrets)."
".Rprofile" = "Startup file for R sessions with renv."
"CITATION.cff" = "Machine-readable citation metadata."
"file_descriptions.json" = "Deprecated: now merged into pyproject.toml."
"platform_rules.json" = "Deprecated: now merged into pyproject.toml."
"LICENSE.txt" = "Project license."
"README.md" = "Main project documentation."
"requirements.txt" = "Python dependency list for pip."
"environment.yml" = "Environment definition for Conda."
"renv.lock" = "Lockfile for restoring R environments via renv."
".github/workflows/ci.yml" = "GitHub Actions CI config."
".gitlab-ci.yml" = "GitLab CI/CD pipeline config."
".woodpecker.yml" = "Woodpecker CI pipeline config."
"deic_storage_download.py" = "Script to pull data from Deic-Storage."
"dependencies.txt" = "Explicit list of Python dependencies."
"get_dependencies.py" = "Checks for and resolves required packages."
"install_dependencies.py" = "Installs missing packages."
"readme_templates.py" = "Generates README templates."
"set_raw_data.py" = "Prepares/stages raw data."
"setup.ps1" = "Windows PowerShell setup script."
"pyproject.toml" = "Python packaging file for `setup/`."
"setup.sh" = "macOS/Linux setup script."
"utils.py" = "Shared utility functions."
"s00_main.py" = "Main pipeline orchestrator script."
"s00_workflow.py" = "Notebook for running full pipeline interactively."
"s01_install_dependencies.py" = "Installs dependencies from config."
"s02_utils.py" = "Reusable helper functions."
"s03_data_collection.py" = "Fetches or builds raw data."
"s04_preprocessing.py" = "Cleans/transforms raw input data."
"s05_modeling.py" = "Runs models and produces outputs."
"s06_visualization.py" = "Generates plots, figures, and summaries."
